//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2019/05/22 - 10:06:01
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="envionatclar"/> and <see cref="envionatclarDto"/>.
    /// </summary>
    public static partial class envionatclarAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="envionatclarDto"/> converted from <see cref="envionatclar"/>.</param>
        static partial void OnDTO(this envionatclar entity, envionatclarDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="envionatclar"/> converted from <see cref="envionatclarDto"/>.</param>
        static partial void OnEntity(this envionatclarDto dto, envionatclar entity);

        /// <summary>
        /// Converts this instance of <see cref="envionatclarDto"/> to an instance of <see cref="envionatclar"/>.
        /// </summary>
        /// <param name="dto"><see cref="envionatclarDto"/> to convert.</param>
        public static envionatclar ToEntity(this envionatclarDto dto)
        {
            if (dto == null) return null;

            var entity = new envionatclar();

            entity.v_EnvioNatclarId = dto.v_EnvioNatclarId;
            entity.v_ServiceId = dto.v_ServiceId;
            entity.v_Paquete = dto.v_Paquete;
            entity.i_EstadoId = dto.i_EstadoId;
            entity.i_IsDeleted = dto.i_IsDeleted;
            entity.i_InsertUserId = dto.i_InsertUserId;
            entity.d_InsertDate = dto.d_InsertDate;
            entity.i_UpdateUserId = dto.i_UpdateUserId;
            entity.d_UpdateDate = dto.d_UpdateDate;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="envionatclar"/> to an instance of <see cref="envionatclarDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="envionatclar"/> to convert.</param>
        public static envionatclarDto ToDTO(this envionatclar entity)
        {
            if (entity == null) return null;

            var dto = new envionatclarDto();

            dto.v_EnvioNatclarId = entity.v_EnvioNatclarId;
            dto.v_ServiceId = entity.v_ServiceId;
            dto.v_Paquete = entity.v_Paquete;
            dto.i_EstadoId = entity.i_EstadoId;
            dto.i_IsDeleted = entity.i_IsDeleted;
            dto.i_InsertUserId = entity.i_InsertUserId;
            dto.d_InsertDate = entity.d_InsertDate;
            dto.i_UpdateUserId = entity.i_UpdateUserId;
            dto.d_UpdateDate = entity.d_UpdateDate;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="envionatclarDto"/> to an instance of <see cref="envionatclar"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<envionatclar> ToEntities(this IEnumerable<envionatclarDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="envionatclar"/> to an instance of <see cref="envionatclarDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<envionatclarDto> ToDTOs(this IEnumerable<envionatclar> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
